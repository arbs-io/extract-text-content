"use strict";var E=Object.create;var o=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var l=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var g=(t,e)=>{for(var r in e)o(t,r,{get:e[r],enumerable:!0})},i=(t,e,r,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of l(e))!h.call(t,a)&&a!==r&&o(t,a,{get:()=>e[a],enumerable:!(n=w(e,a))||n.enumerable});return t};var s=(t,e,r)=>(r=t!=null?E(y(t)):{},i(e||!t||!t.__esModule?o(r,"default",{value:t,enumerable:!0}):r,t)),b=t=>i(o({},"__esModule",{value:!0}),t);var P={};g(P,{extractTextFromBuffer:()=>T,extractTextFromFile:()=>B});module.exports=b(P);var f=s(require("fs")),p=s(require("pdf-parse")),u=s(require("mammoth")),d=require("node-html-markdown");async function B({filepath:t,filetype:e}){let r=await new Promise((n,a)=>{let x=f.createReadStream(t),m=[];x.on("data",c=>{m.push(c)}),x.on("error",c=>{a(c)}),x.on("end",()=>{let c=new Uint8Array(Buffer.concat(m));n(c)})});return await T({bufferArray:r,filetype:e})}async function T({bufferArray:t,filetype:e}){switch(e){case"application/pdf":{let r=Buffer.from(t.buffer),n=await(0,p.default)(r);return{mimeType:e,content:n.text}}case"application/vnd.openxmlformats-officedocument.wordprocessingml.document":{let r=Buffer.from(t.buffer),n=await u.default.extractRawText({buffer:r});return{mimeType:e,content:n.value}}case"text/markdown":case"text/csv":case"text/html":{let r=new TextDecoder().decode(t);return{mimeType:e,content:d.NodeHtmlMarkdown.translate(r)}}case"text/plain":return{mimeType:e,content:new TextDecoder().decode(t)};default:throw new Error("Unsupported file type")}}0&&(module.exports={extractTextFromBuffer,extractTextFromFile});
